import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class ArrayAnalyzer {
    private int[][] array;

    public void readFile(String filename) throws IOException {
        try (BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String line;
            int row = 0;
            while((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (array == null) {
                    array = new int[1][parts.length];
                } else {
                    array = resizeArray(array, row + 1, parts.length);
                }
                for(int col = 0; col < parts.length; col++) {
                    array[row][col] = Integer.parseInt(parts[col]);
                }
                row++;
            }
        }
    }

    private static int[][] resizeArray(int[][] array, int rows, int cols) {
        int[][] newArray = new int[rows][cols];
        for (int row = 0; row < array.length; row++) {
            System.arraycopy(array[row], 0, newArray[row], 0, array[row].length);
    
        }
        return newArray;
    }

    public void printArray() {
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                System.out.print(array[row][col] + " ");
            }
            System.out.println();
        }
    }

    public void sumArray() {
        int sum = 0;
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                sum = sum + array[row][col];
            }
        }
        System.out.println("Sum of all the integers in the array: " + sum);
    }

    public void averageArray() {
        int sum = 0;
        int count = 0;
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                sum = sum + array[row][col];
                count = array[row][col];
            }
        }
            double avg = sum/count;
            System.out.println("Average of all the integers in the array: " + avg);
    }
    

    public void maxArray() {
        int max = Integer.MIN_VALUE;
    
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                if (array[row][col] > max) {
                    max = array[row][col];
                }
            }
        }
        System.out.println("Max value in the array: " + max);
    }

    public void minArray() {
        int min = Integer.MAX_VALUE;
    
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                if (array[row][col] < min) {
                    min = array[row][col];
                }
            }
        }
        System.out.println("Min value in the array: " + min);
    }

    public void transposeArray() {
        int[][] transposed = new int[array[0].length][array.length];
        for(int row = 0; row < array.length; row++) {
            for(int col = 0; col < array[row].length; col++) {
                transposed[col][row] = array[row][col];
            }
        }
        for(int row = 0; row < transposed.length; row++) {
            for(int col = 0; col < transposed[row].length; col++) {
                System.out.print(transposed[row][col] + " ");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) throws IOException 
    {
        String path = "../resources/input.txt";
        File file = new File(path);
        String absolutePath = file.getAbsolutePath();
        System.out.println(absolutePath);
        ArrayAnalyzer arrayAnalyzer = new ArrayAnalyzer();
        arrayAnalyzer.readFile(absolutePath);
        arrayAnalyzer.printArray();
        arrayAnalyzer.sumArray();
        arrayAnalyzer.averageArray();
        arrayAnalyzer.maxArray();
        arrayAnalyzer.minArray();
        arrayAnalyzer.transposeArray();

    }
}
